## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Managing Tickets'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/tickets
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get All Tickets'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      sort:
        name: sort
        description: 'data field(s) to sort by. Separate multiple fields with commas. Denotes descending sorts with a minus sign.'
        required: false
        example: 'sort=title, -createdAt'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      include:
        name: include
        description: 'relationships related to tickets.'
        required: false
        example: Author
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      'filter[column_name]':
        name: 'filter[column_name]'
        description: |-
          Filter by string data field of the tickets. Example: filter[status]=A,C,H,X.
          Filter by title. Wildcards are supported.
        required: false
        example: 'filter[title]=*val*'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      sort: 'sort=title, -createdAt'
      include: Author
      'filter[column_name]': 'filter[title]=*val*'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"type":"Tickets","id":1,"attributes":{"title":"voluptates iusto provident","status":"A","createdAt":"2024-06-16T15:57:28.000000Z","updatedAt":"2024-06-16T15:57:28.000000Z"},"relationships":{"author":{"data":{"type":"user","id":2},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/2"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/1"}},{"type":"Tickets","id":2,"attributes":{"title":"accusantium earum veniam","status":"H","createdAt":"2024-06-16T15:57:28.000000Z","updatedAt":"2024-06-16T15:57:28.000000Z"},"relationships":{"author":{"data":{"type":"user","id":7},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/7"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/2"}},{"type":"Tickets","id":3,"attributes":{"title":"blanditiis repellendus sed","status":"X","createdAt":"2024-06-16T15:57:28.000000Z","updatedAt":"2024-06-16T15:57:28.000000Z"},"relationships":{"author":{"data":{"type":"user","id":4},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/4"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/3"}},{"type":"Tickets","id":4,"attributes":{"title":"aspernatur ipsam veniam","status":"A","createdAt":"2024-06-16T15:57:28.000000Z","updatedAt":"2024-06-16T15:57:28.000000Z"},"relationships":{"author":{"data":{"type":"user","id":3},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/3"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/4"}},{"type":"Tickets","id":5,"attributes":{"title":"asperiores ad quod","status":"X","createdAt":"2024-06-16T15:57:28.000000Z","updatedAt":"2024-06-16T15:57:28.000000Z"},"relationships":{"author":{"data":{"type":"user","id":7},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/7"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/5"}},{"type":"Tickets","id":6,"attributes":{"title":"dolore officiis unde","status":"C","createdAt":"2024-06-16T15:57:28.000000Z","updatedAt":"2024-06-16T15:57:28.000000Z"},"relationships":{"author":{"data":{"type":"user","id":9},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/9"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/6"}},{"type":"Tickets","id":7,"attributes":{"title":"facilis qui impedit","status":"A","createdAt":"2024-06-16T15:57:28.000000Z","updatedAt":"2024-06-16T15:57:28.000000Z"},"relationships":{"author":{"data":{"type":"user","id":9},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/9"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/7"}},{"type":"Tickets","id":8,"attributes":{"title":"ut soluta sed","status":"A","createdAt":"2024-06-16T15:57:28.000000Z","updatedAt":"2024-06-16T15:57:28.000000Z"},"relationships":{"author":{"data":{"type":"user","id":8},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/8"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/8"}},{"type":"Tickets","id":9,"attributes":{"title":"architecto explicabo exercitationem","status":"C","createdAt":"2024-06-16T15:57:28.000000Z","updatedAt":"2024-06-16T15:57:28.000000Z"},"relationships":{"author":{"data":{"type":"user","id":5},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/5"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/9"}},{"type":"Tickets","id":10,"attributes":{"title":"cumque magnam in","status":"H","createdAt":"2024-06-16T15:57:28.000000Z","updatedAt":"2024-06-16T15:57:28.000000Z"},"relationships":{"author":{"data":{"type":"user","id":3},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/3"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/10"}},{"type":"Tickets","id":11,"attributes":{"title":"replace user update request","status":"X","createdAt":"2024-06-16T15:57:28.000000Z","updatedAt":"2024-06-23T16:33:36.000000Z"},"relationships":{"author":{"data":{"type":"user","id":10},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/10"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/11"}},{"type":"Tickets","id":12,"attributes":{"title":"molestias saepe beatae","status":"X","createdAt":"2024-06-16T15:57:28.000000Z","updatedAt":"2024-06-16T15:57:28.000000Z"},"relationships":{"author":{"data":{"type":"user","id":2},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/2"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/12"}},{"type":"Tickets","id":13,"attributes":{"title":"quibusdam enim harum","status":"H","createdAt":"2024-06-16T15:57:28.000000Z","updatedAt":"2024-06-16T15:57:28.000000Z"},"relationships":{"author":{"data":{"type":"user","id":6},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/6"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/13"}},{"type":"Tickets","id":15,"attributes":{"title":"accusamus cum nam","status":"A","createdAt":"2024-06-16T15:57:28.000000Z","updatedAt":"2024-06-16T15:57:28.000000Z"},"relationships":{"author":{"data":{"type":"user","id":10},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/10"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/15"}},{"type":"Tickets","id":16,"attributes":{"title":"nam et eveniet","status":"A","createdAt":"2024-06-16T15:57:28.000000Z","updatedAt":"2024-06-16T15:57:28.000000Z"},"relationships":{"author":{"data":{"type":"user","id":2},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/2"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/16"}}],"links":{"first":"http:\/\/localhost\/api\/v1\/tickets?page=1","last":"http:\/\/localhost\/api\/v1\/tickets?page=7","prev":null,"next":"http:\/\/localhost\/api\/v1\/tickets?page=2"},"meta":{"current_page":1,"from":1,"last_page":7,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=1","label":"1","active":true},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=2","label":"2","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=3","label":"3","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=4","label":"4","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=5","label":"5","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=6","label":"6","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=7","label":"7","active":false},{"url":"http:\/\/localhost\/api\/v1\/tickets?page=2","label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/v1\/tickets","per_page":15,"to":15,"total":102}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 11|cSQ2JIvboDSRkvoeob4syWCV0Yk2VjWZPgQ0B2d1caf62b90'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/tickets
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a Ticket'
      description: 'Creates a new ticket. Users can only create tickets for themselves. Managers can create tickets for any user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data:
        name: data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes:
        name: data.attributes
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: 'The tickets title.'
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: 'The tickets description.'
        required: true
        example: 'Exercitationem occaecati doloremque debitis dignissimos in et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: 'Status of the ticket. Such as Accept (A), Hold (H), Cancel (X), Completed (C).'
        required: true
        example: A
        type: string
        enumValues:
          - A
          - H
          - C
          - X
        exampleWasSpecified: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: 'The author assigned to the ticket.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: quia
          description: 'Exercitationem occaecati doloremque debitis dignissimos in et.'
          status: A
        relationships:
          author:
            data:
              id: 4
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": {
          "type": "Tickets",
          "id": 1,
          "attributes": {
          "title": "test ticket",
          "status": "A",
          "description": "test ticket description",
          "createdAt": "2024-06-23T16:12:12.000000Z",
          "updatedAt": "2024-06-23T16:12:12.000000Z"
          },
          "relationships": {
          "author": {
          "data": {
          "type": "user",
          "id": 14
          },
          "links": {
          "self": "http://127.0.0.1:8000/api/v1/authors/14"
          }
          }
          },
          "links": {
          "self": "http://127.0.0.1:8000/api/v1/tickets/106"
          }
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 11|cSQ2JIvboDSRkvoeob4syWCV0Yk2VjWZPgQ0B2d1caf62b90'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tickets/{id}'
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a ticket'
      description: 'Displays an individual ticket to user according to provided id.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"Tickets","id":1,"attributes":{"title":"voluptates iusto provident","status":"A","description":"Ullam minima adipisci nulla non exercitationem. Ut maxime est voluptas rerum aliquid dicta. Commodi expedita ut enim est aspernatur.","createdAt":"2024-06-16T15:57:28.000000Z","updatedAt":"2024-06-16T15:57:28.000000Z"},"relationships":{"author":{"data":{"type":"user","id":2},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/2"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/1"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 11|cSQ2JIvboDSRkvoeob4syWCV0Yk2VjWZPgQ0B2d1caf62b90'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/tickets/{id}'
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a ticket'
      description: 'Delete a ticket. User can delete their own tickets. Managers can delete any tickets.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": [],
          "message": "Ticket deleted successfully.",
          "status": 200
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 11|cSQ2JIvboDSRkvoeob4syWCV0Yk2VjWZPgQ0B2d1caf62b90'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/tickets/{ticket_id}'
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Replace a ticket'
      description: 'Replace a ticket. User can replace their own tickets. Managers can replace any tickets.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ticket_id:
        name: ticket_id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      ticket_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data:
        name: data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes:
        name: data.attributes
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: true
        example: fugiat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: true
        example: 'Atque consequuntur error tenetur et iure.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: true
        example: H
        type: string
        enumValues:
          - A
          - H
          - C
          - X
        exampleWasSpecified: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: fugiat
          description: 'Atque consequuntur error tenetur et iure.'
          status: H
        relationships:
          author:
            data:
              id: 16
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {

          "data": {
          "type": "Tickets",
          "id": 106,
          "attributes": {
          "title": "Test ticket replace",
          "status": "C",
          "description": "test ticket description",
          "createdAt": "2024-06-23T16:12:12.000000Z",
          "updatedAt": "2024-06-23T16:13:51.000000Z"
          },
          "relationships": {
          "author": {
          "data": {
          "type": "user",
          "id": 14
          },
          "links": {
          "self": "http://127.0.0.1:8000/api/v1/authors/14"
          }
          }
          },
          "links": {
          "self": "http://127.0.0.1:8000/api/v1/tickets/106"
          }
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 11|cSQ2JIvboDSRkvoeob4syWCV0Yk2VjWZPgQ0B2d1caf62b90'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/tickets/{ticket_id}'
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a ticket'
      description: 'Update a ticket. User can update their own tickets. Managers can update any tickets.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ticket_id:
        name: ticket_id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      ticket_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: false
        example: molestiae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: false
        example: 'Repudiandae molestiae sit perspiciatis deleniti cupiditate.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: false
        example: X
        type: string
        enumValues:
          - A
          - H
          - C
          - X
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: false
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: molestiae
          description: 'Repudiandae molestiae sit perspiciatis deleniti cupiditate.'
          status: X
        relationships:
          author:
            data:
              id: 8
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {

           "data": {
          "type": "Tickets",
          "id": 106,
          "attributes": {
          "title": "Test ticket update",
          "status": "A",
          "description": "test ticket description",
          "createdAt": "2024-06-23T16:12:12.000000Z",
          "updatedAt": "2024-06-23T16:13:51.000000Z"
          },
          "relationships": {
          "author": {
          "data": {
          "type": "user",
          "id": 14
          },
          "links": {
          "self": "http://127.0.0.1:8000/api/v1/authors/14"
          }
          }
          },
          "links": {
          "self": "http://127.0.0.1:8000/api/v1/tickets/106"
          }
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 11|cSQ2JIvboDSRkvoeob4syWCV0Yk2VjWZPgQ0B2d1caf62b90'
    controller: null
    method: null
    route: null
    custom: []
